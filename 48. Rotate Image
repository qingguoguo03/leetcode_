# 看到的三种方法比较有趣 效率都比较不错
class Solution(object):
    def rotate(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: void Do not return anything, modify matrix in-place instead.
        """
        # 这种方法会比较容易理解 有点技巧
        # matrix[:] = zip(*matrix[::-1])
       
        # 这个的话 就是把运算切分成两种 先逆运算 然后再交换 这个比最后一种好做到
        matrix.reverse()
        for i in range(len(matrix)):
            for j in range(i, len(matrix)):
                matrix[i][j], matrix[j][i] = matrix[j][i], matrix[i][j]
                
        # 下面这种好想 也完全是内部替换 主要是坐标的问题运算
        A = matrix
        n = len(A)
        for i in range(n/2):
            for j in range(n-n/2): # 二者相加等于-1 取反 正好左边右边 
                A[i][j], A[~j][i], A[~i][~j], A[j][~i] = \
                         A[~j][i], A[~i][~j], A[j][~i], A[i][j]
                         
