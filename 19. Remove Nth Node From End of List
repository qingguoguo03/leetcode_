
# 类似于找到环节点的做法，快慢指针一起走

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
        p1 = p2 = head
        for i in range(n):
            p1 = p1.next
        while p1 and p1.next:
            p1 = p1.next
            p2 = p2.next
        if not p1: # 已到最后一个了
            head = head.next
        else:
            p2.next = p2.next.next
        return head
        
        
        
        
        
        
        
        
        
        
